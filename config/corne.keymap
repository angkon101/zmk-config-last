/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        esecape {
            bindings = <&kp ESC>;
            key-positions = <1 10>;
        };

        to_3rd_layer {
            bindings = <&mo 3>;
            key-positions = <37 40>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q           &kp W  &kp E     &kp R  &kp T        &kp Y      &kp U          &kp I      &kp O       &kp P           &none
&none  &kp A           &kp S  &kp D     &kp F  &kp G        &kp H      &kp J          &kp K      &kp L       &kp SEMI        &none
&none  &bt BT_CLR_ALL  &kp X  &kp C     &kp V  &kp B        &kp N      &kp M          &kp COMMA  &bt BT_CLR  &bt BT_CLR_ALL  &none
                              &kp LGUI  &mo 1  &kp ENTER    &kp SPACE  &kp BACKSPACE  &mo 2
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp N1   &kp N2  &kp N3  &kp N4  &kp N5       &kp N6     &kp N7         &kp N8    &kp N9      &kp N0          &none
&none  &kp TAB  &none   &none   &none   &none        &kp LEFT   &kp DOWN       &kp UP    &kp RIGHT   &kp TAB         &none
&none  &none    &trans  &trans  &trans  &trans       &trans     &trans         &trans    &bt BT_CLR  &bt BT_CLR_ALL  &none
                        &none   &trans  &kp ENTER    &kp SPACE  &kp BACKSPACE  &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp EXCL           &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &none
&none  &kp C_VOL_UP       &none   &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp SEMI  &none
&none  &kp C_VOLUME_DOWN  &none   &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &none
                                  &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&none   &kp ESC  &trans  &trans  &trans  &trans    &trans  &trans          &kp UP_ARROW    &trans           &trans  &trans
&trans  &trans   &trans  &trans  &trans  &trans    &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans  &trans
&trans  &trans   &trans  &trans  &trans  &trans    &trans  &trans          &trans          &trans           &trans  &trans
                         &trans  &trans  &trans    &trans  &trans          &trans
            >;
        };
    };
};
